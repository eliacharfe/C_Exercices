/* ./ex7a
 * Shared memory: Common Greatest Divisor + Decomposition
 * ========================================================
 * === Written by: Eliachar Feig. id: 302278338 ===
 * =======================================================
This program uses threads, 
The father cast in an array of 5000 numbers from 0 to 200000
and make born 3 threads which each of them run until the array is empty
the first cell in the array is a lock , 0 if is open , 1 if is close. each child will be 
block by the first cell if it is 1 when it become zero it get in and lock by putting
1, then he check if the number he castsed is found in the global array, if so 
he delete it

 * No Input.
 * Output: father: how much time took
 *         child (each): how much and how much caused delete
 *
 */

gcc -Wall ex7a.c -o ex7a -lpthread
============================================
==============================================
/* ./ex7b
 * Threads: Common Greatest Divisor + Decomposition
 * ========================================================
 * === Written by: Eliachar Feig. id: 302278338 ===
 * =======================================================
This program uses threads, the father make born 3 threads
and save their id's in a global array (of 3)
 * 3rd child: reads from the user in infinite loop a char:
 *  if the char is 'g':
 * then ask for 2 integers and send it through an array (specific to him) in the first 2 
cells (the array is globaly) then send signal SIGUSR1 to 1st child
.  and go to sleep until get a signal. the 1st child 
 * calculates the greatest common divisor (gcd) and return the answer in
 * the next cell in the array. and send SIGUSR1 to 3rd child which will print
the answer which he find in 3rd cell
 * if the char is 'd':
 * then ask for an integer from the user and send it to an (other array) that
 * 2nd child which decompose the number to primes numbers and return the
 * answer in the array between cell 0 to 10. then 3rd child go sleep until
get signal. the 2nd child get the number to decompose and put the answer
in the array and send signal SIGUSR2 which will wake the 3rd child which
print the answer..

 * All program terminate when get signal SIGINT
 *
 * Input: in infinite loop: scan a char:
 *  if 'g': then get 2 integers
 *  if 'd': then get 1 integers
 *
 *  Output: according to the char:
 *  if 'g': gcd
 *  if 'd': decomposition of primes
 */

gcc -Wall ex7b.c -o ex7b -lpthread
==================================
